name: Release

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Restore node_modules
        id: cache-node-modules-restore
        uses: actions/cache/restore@v4
        with:
          path: ./node_modules
          key: node-modules

      - name: Install dependencies
        run: bun install --frozen-lockfile --production

      - name: Save node_modules
        id: cache-primes-save
        uses: actions/cache/save@v4
        with:
          path: ./node_modules
          key: ${{ steps.cache-node-modules-restore.outputs.cache-primary-key }}

      - name: Build frontend
        run: bun run build

      - uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: ./dist/

  deploy:
    needs: build
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: frontend
          path: ./dist/

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Set up Tauri CLI
        run: echo "$(yarn global bin)" >> $GITHUB_PATH && yarn global add @tauri-apps/cli

      - name: Restore target
        id: cache-target-restore
        uses: actions/cache/restore@v4
        with:
          path: ./src-tauri/target
          key: target

      - name: Build and upload a GitHub release
        uses: tauri-apps/tauri-action@v0
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: "App v__VERSION__"
          releaseBody: |
            See the assets to download and install this version.

            If you get a virus warning read this article: https://tauri.by.simon.hyll.nu/concepts/security/false_positives/.

            Mac: Extract the .app from the .dmg and run `xattr -d com.apple.quarantine tauri-by-simon.app`.
            Windows: Run `attrib -r tauri-by-simon.msi:Zone.Identifier`.
          releaseDraft: false
          prerelease: false
          includeUpdaterJson: true
          tauriScript: tauri
          args: -c '{"build":{"beforeBuildCommand":""}}'

      - name: Save target
        id: cache-target-save
        uses: actions/cache/save@v4
        with:
          path: ./src-tauri/target
          key: ${{ steps.cache-target-restore.outputs.cache-primary-key }}
